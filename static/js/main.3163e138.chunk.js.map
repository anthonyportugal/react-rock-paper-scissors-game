{"version":3,"sources":["context/DataContext.js","components/Icon/Icon.jsx","components/IconSelector/IconSelector.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Result/Result.jsx","pages/HomePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GameContext","createContext","icons","type","name","value","DataProvider","children","useState","handSelected","setHandSelected","result","setResult","resultMessage","setResultMessage","isMounted","useRef","randomHand","randomPosition","Math","floor","random","length","console","log","resultMessageLogic","useEffect","current","toggleResult","document","getElementsByClassName","classList","toggle","cpuHandSelected","Provider","playAgain","IconWithAction","icon","useContext","className","onClick","Icon","defaultProps","IconSelector","map","index","Header","Layout","Result","item","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3163e138.chunk.js","sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\n\nexport const GameContext = createContext();\n\nconst icons = [\n  { type: 'fas', name: 'fa-hand-rock', value: 'rock' },\n  { type: 'fas', name: 'fa-hand-scissors', value: 'scissor' },\n  { type: 'fas', name: 'fa-hand-paper', value: 'paper' },\n]\n\nexport const DataProvider = ({ children }) => {\n  const [handSelected, setHandSelected] = useState({})\n  const [result, setResult] = useState([])\n  const [resultMessage, setResultMessage] = useState('')\n\n  const isMounted = useRef(false);\n\n  const randomHand = () => {\n    const randomPosition = Math.floor(Math.random() * icons.length)\n    console.log(icons[randomPosition])\n    setResultMessage(resultMessageLogic(icons[randomPosition].value))\n    return icons[randomPosition]\n  }\n\n  useEffect(() => {\n    if (isMounted.current) {\n      setResult([handSelected, randomHand()])\n      toggleResult()\n      resultMessageLogic()\n    } else {\n      isMounted.current = true\n    }\n  }, [handSelected])\n\n  const toggleResult = () => {\n    document.getElementsByClassName('homePage__starting')[0].classList.toggle('hidden')\n    document.getElementsByClassName('homePage__result')[0].classList.toggle('hidden')\n  }\n\n  const resultMessageLogic = (cpuHandSelected) => {\n    if (handSelected?.value === 'rock' && cpuHandSelected === 'scissor') {\n      return 'You Win!'\n    } else if (handSelected?.value === 'paper' && cpuHandSelected === 'rock') {\n      return 'You Win!'\n    } else if (handSelected?.value === 'scissor' && cpuHandSelected === 'paper') {\n      return 'You Win!'\n    } else if (handSelected?.value === cpuHandSelected) {\n      return 'Draw!'\n    } else {\n      return 'You Lose!'\n    }\n  }\n\n  const playAgain = () => {\n    isMounted.current = false\n    setHandSelected({})\n    toggleResult()\n  }\n\n  return (\n    <GameContext.Provider\n      value={{\n        icons,\n        randomHand,\n        handSelected,\n        setHandSelected,\n        result,\n        resultMessage,\n        playAgain,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  )\n}","import React, { useContext } from 'react'\nimport { GameContext } from '../../context/DataContext'\nimport './icon.scss'\n\nconst IconWithAction = ({ icon }) => {\n  const { setHandSelected } = useContext(GameContext)\n\n  return (\n    <div className=\"iconWithAction\" onClick={() => setHandSelected(icon)}>\n      <i className={`${icon.type} ${icon.name}`}></i>\n    </div>\n  )\n}\n\nconst Icon = ({ icon }) => {\n  return (\n    <div className=\"icon\" >\n      <i className={`${icon.type} ${icon.name}`}></i>\n    </div>\n  )\n}\n\nIcon.defaultProps = {\n  type: '',\n  icon: '',\n  value: ''\n}\n\nexport { Icon, IconWithAction }\n","import React, { useContext } from 'react'\nimport { GameContext } from '../../context/DataContext'\nimport { IconWithAction } from '../Icon/Icon'\nimport './iconSelector.scss'\n\nconst IconSelector = () => {\n  const { icons } = useContext(GameContext)\n\n  return (\n    <div className=\"iconSelector\" >\n      {icons.map((icon, index) => (\n        <IconWithAction icon={icon} key={index} />\n      ))}\n    </div>\n  )\n}\n\nexport default IconSelector\n","import React from 'react'\nimport './header.scss'\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Rock Paper Scissors Game</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from '../Header/Header'\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <div className=\"main\">\n        {children}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import React, { useContext } from 'react'\nimport { GameContext } from '../../context/DataContext'\nimport { Icon } from '../Icon/Icon'\nimport './result.scss'\n\nconst Result = () => {\n  const { result, resultMessage, playAgain } = useContext(GameContext)\n\n  return (\n    <div className=\"result\">\n      <div className=\"result__question\">\n        <h2>{resultMessage}</h2>\n        <button onClick={playAgain}>Play again</button>\n      </div>\n      <div className=\"result__icons\">\n        {result?.map((item, index) => (\n          <Icon icon={item} key={index} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React from 'react'\nimport IconSelector from '../components/IconSelector/IconSelector'\nimport Layout from '../components/Layout/Layout'\nimport Result from '../components/Result/Result'\nimport './homePage.scss'\n\nconst HomePage = () => {\n  return (\n    <Layout>\n      <div className=\"homePage\">\n\n        <div className=\"homePage__starting\">\n          <h2>Choose a hand to play</h2>\n          <IconSelector />\n        </div>\n\n        <div className=\"homePage__result hidden\">\n          <Result />\n        </div>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default HomePage\n","import { DataProvider } from './context/DataContext';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        <HomePage />\n      </div>\n    </DataProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}